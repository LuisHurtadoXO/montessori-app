{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\machi\\\\OneDrive\\\\Documents\\\\School-Work\\\\Assignments Fall 2024\\\\CEN3907C\\\\montessori-app\\\\src\\\\pages\\\\SystemControl.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./SystemControl.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SystemControl() {\n  _s();\n  // Falling shapes state\n  const [shapes, setShapes] = useState([]);\n\n  // Dashboard states\n  const [isBoardConnected, setIsBoardConnected] = useState(false); // Board connection status\n  const [plankCount, setPlankCount] = useState(1); // Number of detected planks\n  const [areLEDsOn, setAreLEDsOn] = useState(false); // LED master control\n\n  // Generate falling shapes\n  useEffect(() => {\n    const generatedShapes = Array.from({\n      length: 20\n    }, (_, index) => ({\n      id: index,\n      left: Math.random() * 90,\n      size: Math.random() * 30 + 20,\n      color: `rgba(${Math.floor(Math.random() * 255)},\n                    ${Math.floor(Math.random() * 255)},\n                    ${Math.floor(Math.random() * 255)}, 0.7)`,\n      shape: [\"circle\", \"square\", \"triangle\"][Math.floor(Math.random() * 3)],\n      duration: Math.random() * 5 + 5,\n      delay: Math.random() * 2\n    }));\n    setShapes(generatedShapes);\n  }, []);\n\n  // Toggle board connection\n  const toggleBoardConnection = () => {\n    setIsBoardConnected(!isBoardConnected);\n    console.log(`Main board is now ${!isBoardConnected ? \"Connected\" : \"Disconnected\"}`);\n  };\n\n  // Toggle LEDs\n  const toggleLEDs = () => {\n    if (!isBoardConnected) {\n      console.log(\"Board must be connected to control LEDs.\");\n      return;\n    }\n    setAreLEDsOn(!areLEDsOn);\n    console.log(`LEDs are now ${!areLEDsOn ? \"ON\" : \"OFF\"}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"system-control-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"animated-background\",\n      children: shapes.map(shape => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `shape ${shape.shape}`,\n        style: {\n          left: `${shape.left}%`,\n          width: `${shape.size}px`,\n          height: `${shape.size}px`,\n          backgroundColor: shape.shape === \"triangle\" ? \"transparent\" : shape.color,\n          animationDuration: `${shape.duration}s`,\n          animationDelay: `${shape.delay}s`\n        },\n        children: shape.shape === \"triangle\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 0,\n            height: 0,\n            borderLeft: `${shape.size / 2}px solid transparent`,\n            borderRight: `${shape.size / 2}px solid transparent`,\n            borderBottom: `${shape.size}px solid ${shape.color}`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)\n      }, shape.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"System Control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Board Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `status-indicator ${isBoardConnected ? \"connected\" : \"disconnected\"}`,\n            children: isBoardConnected ? \"Connected\" : \"Disconnected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-button\",\n            onClick: toggleBoardConnection,\n            children: isBoardConnected ? \"Disconnect\" : \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Detected Planks:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"plank-count\",\n            children: plankCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"LED Master Control:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `control-button ${areLEDsOn ? \"active\" : \"\"}`,\n            onClick: toggleLEDs,\n            disabled: !isBoardConnected // Disable if board is disconnected\n            ,\n            children: areLEDsOn ? \"Turn LEDs OFF\" : \"Turn LEDs ON\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(SystemControl, \"7lUfXntVIV6ok4D1qjFwegyga3c=\");\n_c = SystemControl;\nexport default SystemControl;\nvar _c;\n$RefreshReg$(_c, \"SystemControl\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","SystemControl","_s","shapes","setShapes","isBoardConnected","setIsBoardConnected","plankCount","setPlankCount","areLEDsOn","setAreLEDsOn","generatedShapes","Array","from","length","_","index","id","left","Math","random","size","color","floor","shape","duration","delay","toggleBoardConnection","console","log","toggleLEDs","className","children","map","style","width","height","backgroundColor","animationDuration","animationDelay","borderLeft","borderRight","borderBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/machi/OneDrive/Documents/School-Work/Assignments Fall 2024/CEN3907C/montessori-app/src/pages/SystemControl.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./SystemControl.css\";\r\n\r\nfunction SystemControl() {\r\n  // Falling shapes state\r\n  const [shapes, setShapes] = useState([]);\r\n\r\n  // Dashboard states\r\n  const [isBoardConnected, setIsBoardConnected] = useState(false); // Board connection status\r\n  const [plankCount, setPlankCount] = useState(1); // Number of detected planks\r\n  const [areLEDsOn, setAreLEDsOn] = useState(false); // LED master control\r\n\r\n  // Generate falling shapes\r\n  useEffect(() => {\r\n    const generatedShapes = Array.from({ length: 20 }, (_, index) => ({\r\n      id: index,\r\n      left: Math.random() * 90,\r\n      size: Math.random() * 30 + 20,\r\n      color: `rgba(${Math.floor(Math.random() * 255)},\r\n                    ${Math.floor(Math.random() * 255)},\r\n                    ${Math.floor(Math.random() * 255)}, 0.7)`,\r\n      shape: [\"circle\", \"square\", \"triangle\"][Math.floor(Math.random() * 3)],\r\n      duration: Math.random() * 5 + 5,\r\n      delay: Math.random() * 2,\r\n    }));\r\n    setShapes(generatedShapes);\r\n  }, []);\r\n\r\n  // Toggle board connection\r\n  const toggleBoardConnection = () => {\r\n    setIsBoardConnected(!isBoardConnected);\r\n    console.log(\r\n      `Main board is now ${!isBoardConnected ? \"Connected\" : \"Disconnected\"}`\r\n    );\r\n  };\r\n\r\n  // Toggle LEDs\r\n  const toggleLEDs = () => {\r\n    if (!isBoardConnected) {\r\n      console.log(\"Board must be connected to control LEDs.\");\r\n      return;\r\n    }\r\n    setAreLEDsOn(!areLEDsOn);\r\n    console.log(`LEDs are now ${!areLEDsOn ? \"ON\" : \"OFF\"}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"system-control-container\">\r\n      {/* Falling Shapes Background */}\r\n      <div className=\"animated-background\">\r\n        {shapes.map((shape) => (\r\n          <div\r\n            key={shape.id}\r\n            className={`shape ${shape.shape}`}\r\n            style={{\r\n              left: `${shape.left}%`,\r\n              width: `${shape.size}px`,\r\n              height: `${shape.size}px`,\r\n              backgroundColor:\r\n                shape.shape === \"triangle\" ? \"transparent\" : shape.color,\r\n              animationDuration: `${shape.duration}s`,\r\n              animationDelay: `${shape.delay}s`,\r\n            }}\r\n          >\r\n            {shape.shape === \"triangle\" && (\r\n              <div\r\n                style={{\r\n                  width: 0,\r\n                  height: 0,\r\n                  borderLeft: `${shape.size / 2}px solid transparent`,\r\n                  borderRight: `${shape.size / 2}px solid transparent`,\r\n                  borderBottom: `${shape.size}px solid ${shape.color}`,\r\n                }}\r\n              ></div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Dashboard */}\r\n      <div className=\"dashboard\">\r\n        <h1 className=\"title\">System Control</h1>\r\n        <div className=\"status-section\">\r\n          <div className=\"status-item\">\r\n            <h3>Board Status:</h3>\r\n            <p\r\n              className={`status-indicator ${\r\n                isBoardConnected ? \"connected\" : \"disconnected\"\r\n              }`}\r\n            >\r\n              {isBoardConnected ? \"Connected\" : \"Disconnected\"}\r\n            </p>\r\n            <button\r\n              className=\"control-button\"\r\n              onClick={toggleBoardConnection}\r\n            >\r\n              {isBoardConnected ? \"Disconnect\" : \"Connect\"}\r\n            </button>\r\n          </div>\r\n          <div className=\"status-item\">\r\n            <h3>Detected Planks:</h3>\r\n            <p className=\"plank-count\">{plankCount}</p>\r\n          </div>\r\n          <div className=\"status-item\">\r\n            <h3>LED Master Control:</h3>\r\n            <button\r\n              className={`control-button ${areLEDsOn ? \"active\" : \"\"}`}\r\n              onClick={toggleLEDs}\r\n              disabled={!isBoardConnected} // Disable if board is disconnected\r\n            >\r\n              {areLEDsOn ? \"Turn LEDs OFF\" : \"Turn LEDs ON\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SystemControl;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}