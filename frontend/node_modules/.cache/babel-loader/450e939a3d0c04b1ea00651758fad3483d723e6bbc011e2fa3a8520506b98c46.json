{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\machi\\\\OneDrive\\\\Documents\\\\School-Work\\\\Assignments Fall 2024\\\\CEN3907C\\\\montessori-app\\\\src\\\\pages\\\\SystemControl.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./SystemControl.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SystemControl() {\n  _s();\n  const [isBoardConnected, setIsBoardConnected] = useState(false); // Board connection status\n  const [plankCount, setPlankCount] = useState(1); // Number of detected planks\n  const [areLEDsOn, setAreLEDsOn] = useState(false); // LED master control\n\n  const toggleBoardConnection = () => {\n    setIsBoardConnected(!isBoardConnected);\n    console.log(`Main board is now ${!isBoardConnected ? \"Connected\" : \"Disconnected\"}`);\n  };\n  const toggleLEDs = () => {\n    if (!isBoardConnected) {\n      console.log(\"Board must be connected to control LEDs.\");\n      return;\n    }\n    setAreLEDsOn(!areLEDsOn);\n    console.log(`LEDs are now ${!areLEDsOn ? \"ON\" : \"OFF\"}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"system-control-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"System Control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Board Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `status-indicator ${isBoardConnected ? \"connected\" : \"disconnected\"}`,\n            children: isBoardConnected ? \"Connected\" : \"Disconnected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-button\",\n            onClick: toggleBoardConnection,\n            children: isBoardConnected ? \"Disconnect\" : \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Detected Planks:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"plank-count\",\n            children: plankCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"LED Master Control:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `control-button ${areLEDsOn ? \"active\" : \"\"}`,\n            onClick: toggleLEDs,\n            disabled: !isBoardConnected // Disable if board is disconnected\n            ,\n            children: areLEDsOn ? \"Turn LEDs OFF\" : \"Turn LEDs ON\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(SystemControl, \"SKuM8zaPVrEm5lVTh/5T0XVMB8g=\");\n_c = SystemControl;\nexport default SystemControl;\nvar _c;\n$RefreshReg$(_c, \"SystemControl\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SystemControl","_s","isBoardConnected","setIsBoardConnected","plankCount","setPlankCount","areLEDsOn","setAreLEDsOn","toggleBoardConnection","console","log","toggleLEDs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/machi/OneDrive/Documents/School-Work/Assignments Fall 2024/CEN3907C/montessori-app/src/pages/SystemControl.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./SystemControl.css\";\r\n\r\nfunction SystemControl() {\r\n  const [isBoardConnected, setIsBoardConnected] = useState(false); // Board connection status\r\n  const [plankCount, setPlankCount] = useState(1); // Number of detected planks\r\n  const [areLEDsOn, setAreLEDsOn] = useState(false); // LED master control\r\n\r\n  const toggleBoardConnection = () => {\r\n    setIsBoardConnected(!isBoardConnected);\r\n    console.log(\r\n      `Main board is now ${!isBoardConnected ? \"Connected\" : \"Disconnected\"}`\r\n    );\r\n  };\r\n\r\n  const toggleLEDs = () => {\r\n    if (!isBoardConnected) {\r\n      console.log(\"Board must be connected to control LEDs.\");\r\n      return;\r\n    }\r\n    setAreLEDsOn(!areLEDsOn);\r\n    console.log(`LEDs are now ${!areLEDsOn ? \"ON\" : \"OFF\"}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"system-control-container\">\r\n      <div className=\"dashboard\">\r\n        <h1 className=\"title\">System Control</h1>\r\n        <div className=\"status-section\">\r\n          <div className=\"status-item\">\r\n            <h3>Board Status:</h3>\r\n            <p\r\n              className={`status-indicator ${\r\n                isBoardConnected ? \"connected\" : \"disconnected\"\r\n              }`}\r\n            >\r\n              {isBoardConnected ? \"Connected\" : \"Disconnected\"}\r\n            </p>\r\n            <button\r\n              className=\"control-button\"\r\n              onClick={toggleBoardConnection}\r\n            >\r\n              {isBoardConnected ? \"Disconnect\" : \"Connect\"}\r\n            </button>\r\n          </div>\r\n          <div className=\"status-item\">\r\n            <h3>Detected Planks:</h3>\r\n            <p className=\"plank-count\">{plankCount}</p>\r\n          </div>\r\n          <div className=\"status-item\">\r\n            <h3>LED Master Control:</h3>\r\n            <button\r\n              className={`control-button ${\r\n                areLEDsOn ? \"active\" : \"\"\r\n              }`}\r\n              onClick={toggleLEDs}\r\n              disabled={!isBoardConnected} // Disable if board is disconnected\r\n            >\r\n              {areLEDsOn ? \"Turn LEDs OFF\" : \"Turn LEDs ON\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SystemControl;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}