{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\machi\\\\OneDrive\\\\Documents\\\\School-Work\\\\Assignments Fall 2024\\\\CEN3907C\\\\montessori-app\\\\src\\\\pages\\\\GameModes.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./GameModes.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameModes() {\n  _s();\n  const [shapes, setShapes] = useState([]);\n  useEffect(() => {\n    const generatedShapes = Array.from({\n      length: 20\n    }, (_, index) => ({\n      id: index,\n      left: Math.random() * 90,\n      size: Math.random() * 30 + 20,\n      color: `rgba(${Math.floor(Math.random() * 255)}, \n                      ${Math.floor(Math.random() * 255)}, \n                      ${Math.floor(Math.random() * 255)}, 0.7)`,\n      shape: [\"circle\", \"square\", \"triangle\"][Math.floor(Math.random() * 3)],\n      duration: Math.random() * 5 + 5,\n      delay: Math.random() * 2\n    }));\n    setShapes(generatedShapes);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-modes-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"animated-background\",\n      children: shapes.map(shape => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `shape ${shape.shape}`,\n        style: {\n          left: `${shape.left}%`,\n          width: `${shape.size}px`,\n          height: `${shape.size}px`,\n          backgroundColor: shape.shape === \"triangle\" ? \"transparent\" : shape.color,\n          animationDuration: `${shape.duration}s`,\n          animationDelay: `${shape.delay}s`\n        },\n        children: shape.shape === \"triangle\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 0,\n            height: 0,\n            borderLeft: `${shape.size / 2}px solid transparent`,\n            borderRight: `${shape.size / 2}px solid transparent`,\n            borderBottom: `${shape.size}px solid ${shape.color}`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)\n      }, shape.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Game Modes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select a game mode to get started!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"Pathway.png\" // Replace with the actual image path\n          ,\n          alt: \"Pathway Game\",\n          className: \"game-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Pathway\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Guide the child from the green node to the red node.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"UpNext.png\" // Replace with the actual image path\n          ,\n          alt: \"Up Next Game\",\n          className: \"game-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Up Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Traverse sequential red nodes that change after each turn.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(GameModes, \"wtD9lBzMz6qqEJmV5/sfl1JQYww=\");\n_c = GameModes;\nexport default GameModes;\nvar _c;\n$RefreshReg$(_c, \"GameModes\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","GameModes","_s","shapes","setShapes","generatedShapes","Array","from","length","_","index","id","left","Math","random","size","color","floor","shape","duration","delay","className","children","map","style","width","height","backgroundColor","animationDuration","animationDelay","borderLeft","borderRight","borderBottom","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/machi/OneDrive/Documents/School-Work/Assignments Fall 2024/CEN3907C/montessori-app/src/pages/GameModes.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./GameModes.css\";\r\n\r\nfunction GameModes() {\r\n  const [shapes, setShapes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const generatedShapes = Array.from({ length: 20 }, (_, index) => ({\r\n      id: index,\r\n      left: Math.random() * 90,\r\n      size: Math.random() * 30 + 20,\r\n      color: `rgba(${Math.floor(Math.random() * 255)}, \r\n                      ${Math.floor(Math.random() * 255)}, \r\n                      ${Math.floor(Math.random() * 255)}, 0.7)`,\r\n      shape: [\"circle\", \"square\", \"triangle\"][Math.floor(Math.random() * 3)],\r\n      duration: Math.random() * 5 + 5,\r\n      delay: Math.random() * 2,\r\n    }));\r\n    setShapes(generatedShapes);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"game-modes-container\">\r\n      <div className=\"animated-background\">\r\n        {shapes.map((shape) => (\r\n          <div\r\n            key={shape.id}\r\n            className={`shape ${shape.shape}`}\r\n            style={{\r\n              left: `${shape.left}%`,\r\n              width: `${shape.size}px`,\r\n              height: `${shape.size}px`,\r\n              backgroundColor:\r\n                shape.shape === \"triangle\" ? \"transparent\" : shape.color,\r\n              animationDuration: `${shape.duration}s`,\r\n              animationDelay: `${shape.delay}s`,\r\n            }}\r\n          >\r\n            {shape.shape === \"triangle\" && (\r\n              <div\r\n                style={{\r\n                  width: 0,\r\n                  height: 0,\r\n                  borderLeft: `${shape.size / 2}px solid transparent`,\r\n                  borderRight: `${shape.size / 2}px solid transparent`,\r\n                  borderBottom: `${shape.size}px solid ${shape.color}`,\r\n                }}\r\n              ></div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <h1 className=\"title\">Game Modes</h1>\r\n      <p>Select a game mode to get started!</p>\r\n      <div className=\"game-options\">\r\n        <div className=\"game-card\">\r\n          <img\r\n            src=\"Pathway.png\" // Replace with the actual image path\r\n            alt=\"Pathway Game\"\r\n            className=\"game-image\"\r\n          />\r\n          <h3>Pathway</h3>\r\n          <p>Guide the child from the green node to the red node.</p>\r\n        </div>\r\n        <div className=\"game-card\">\r\n          <img\r\n            src=\"UpNext.png\" // Replace with the actual image path\r\n            alt=\"Up Next Game\"\r\n            className=\"game-image\"\r\n          />\r\n          <h3>Up Next</h3>\r\n          <p>\r\n            Traverse sequential red nodes that change after each turn.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameModes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}